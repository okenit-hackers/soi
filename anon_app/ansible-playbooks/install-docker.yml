---
- name: docker installation
 hosts: all
 serial: 1
 become: yes
 vars:
 username: "{{ lookup('env', 'REMOTE_USERNAME') }}"
 tasks:
 - name: Get release name
  shell: lsb_release -cs
  register: release
  run_once: true

 - name: Get distrib name
  shell: lsb_release -is
  register: distrib
  run_once: true

 - set_fact:
  release={{ release.stdout }}
  distrib={{ distrib.stdout }}

 - debug: var=release
  run_once: true

 - name: Install common packages
  apt:
  update_cache: yes
  name: "{{ packages }}"
  vars:
  packages:
   - apt-transport-https
   - ca-certificates
   - curl
   - gnupg2
   - software-properties-common

 - name: Check docker installed
  shell: command -v docker
  register: is_docker_installed
  ignore_errors: yes

 - name: Add Docker`s official GPG key
  apt_key:
  url: https://download.docker.com/linux/{{ distrib | lower }}/gpg
  state: present
  when: is_docker_installed.rc != 0

 - name: Add Docker repo
  apt_repository:
  repo: deb [arch=amd64] https://download.docker.com/linux/{{ distrib | lower }} {{ release }} stable
  state: present
  filename: docker
  when: is_docker_installed.rc != 0

 - name: Install Docker
  apt:
  update_cache: yes
  name: "{{ packages }}"
  vars:
  packages:
   - docker-ce
   - docker-ce-cli
   - containerd.io
   - docker-compose
  when: is_docker_installed.rc != 0

 - name: add {{ username }} to docker group
  user:
  name: "{{ username }}"
  groups: docker
  append: yes
  when: is_docker_installed.rc != 0
  ignore_errors: yes

 - name: adding an entry to cron
  lineinfile:
  path: /etc/crontab
  line: '0 */2 * * * docker exec external-worker_celery_1 python /daemon.py'
  state: absent

 - name: adding an entry to cron
  lineinfile:
  path: /etc/crontab
  line: '@daily root docker exec external-worker_celery_1 cron'
  state: present


