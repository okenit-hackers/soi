# Generated by Django 3.1.4 on 2020-12-28 18:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
 dependencies = [
  ('anon_app', '0029_merge_20201222_1159'),
 ]

 operations = [
  migrations.AlterModelOptions(
   name='appimage',
   options={'ordering': ['-id'], 'verbose_name': 'App Image', 'verbose_name_plural': 'App Images'},
  ),
  migrations.AlterModelOptions(
   name='chain',
   options={'ordering': ['-id'], 'verbose_name': 'Chain', 'verbose_name_plural': 'Chains'},
  ),
  migrations.AlterModelOptions(
   name='edge',
   options={'ordering': ['-id'], 'verbose_name': 'Edge', 'verbose_name_plural': 'Edges'},
  ),
  migrations.AlterModelOptions(
   name='hosting',
   options={'ordering': ['-id'], 'verbose_name': 'Hosting', 'verbose_name_plural': 'Hostings'},
  ),
  migrations.AlterModelOptions(
   name='hostingaccount',
   options={'ordering': ['-id'], 'verbose_name': 'Hosting account', 'verbose_name_plural': 'Hosting accounts'},
  ),
  migrations.AlterModelOptions(
   name='node',
   options={'ordering': ['-id'], 'verbose_name': 'Node', 'verbose_name_plural': 'Nodes'},
  ),
  migrations.AlterModelOptions(
   name='proxy',
   options={'ordering': ['-id'], 'verbose_name': 'Proxy', 'verbose_name_plural': 'Proxies'},
  ),
  migrations.AlterModelOptions(
   name='server',
   options={'ordering': ['-id'], 'verbose_name': 'Server', 'verbose_name_plural': 'Servers'},
  ),
  migrations.AlterModelOptions(
   name='srvaccount',
   options={'ordering': ['-id'], 'verbose_name': 'Server Account', 'verbose_name_plural': 'Server Accounts'},
  ),
  migrations.AlterField(
   model_name='appimage',
   name='browser_profiles',
   field=models.FileField(
    help_text='ZIP архив с профилями браузеров (в архиве должны содержаться две директории: firefox и chrome, каждая из которых в свою очередь содержит некоторое кол-во директорий, являющихся профилями соответствующих браузеров)',
    upload_to='', verbose_name='browser profiles'),
  ),
  migrations.AlterField(
   model_name='appimage',
   name='docker_compose',
   field=models.FileField(
    help_text='Текстовый файл в формате yml, описывает запуск сервисов, брать актуальную версию можно из /path/to/soi/end-node',
    upload_to='', verbose_name='docker-compose'),
  ),
  migrations.AlterField(
   model_name='appimage',
   name='env',
   field=models.FileField(
    help_text='Текстовый файл формата env, описывает переменные окружающей среды, брать актуальную версию можно из /path/to/soi/end-node',
    upload_to='', verbose_name='environment variable'),
  ),
  migrations.AlterField(
   model_name='appimage',
   name='filebeat_config',
   field=models.FileField(
    help_text='Файл в формате yml для получение сообщений из файлов журналов удалённых узлов', upload_to='',
    verbose_name='filebeat config'),
  ),
  migrations.AlterField(
   model_name='appimage',
   name='image',
   field=models.FileField(
    help_text='ZIP архив, содержащий в себе tar файл, который представляет собой docker образ приложения',
    upload_to='', verbose_name='image'),
  ),
  migrations.AlterField(
   model_name='appimage',
   name='name',
   field=models.CharField(
    help_text='Имя образа, данное ему при создании (пр.: gitlab.lan:5005/filigree/sos/sos_web-app)',
    max_length=120, verbose_name='image name'),
  ),
  migrations.AlterField(
   model_name='appimage',
   name='title',
   field=models.CharField(help_text='Название образа, допустимо любое значение', max_length=120,
          verbose_name='title'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='app_image',
   field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
         to='anon_app.appimage', verbose_name='app image'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='fake_remove',
   field=models.BooleanField(default=False, verbose_name='remove'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='openssh_container_external_port',
   field=models.PositiveIntegerField(
    help_text='Порт на котором будет доступен ssh сервер контейнера openssh на удаленном хосте', null=True,
    validators=[django.core.validators.MinValueValidator(1024),
       django.core.validators.MaxValueValidator(65535)],
    verbose_name='external ssh container port'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='openssh_container_id_rsa',
   field=models.FileField(
    help_text='Приватный ключ для доступа к удаленному контейнеру с openssh (если не указывать, то создастся автоматически)',
    null=True, upload_to='', verbose_name='ssh container private key'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='openssh_container_id_rsa_pub',
   field=models.FileField(
    help_text='Публичный ключ для доступа к удаленному контейнеру с openssh (если не указывать, то создастся автоматически)',
    null=True, upload_to='', verbose_name='ssh container public key'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='openssh_container_internal_port',
   field=models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1024),
                  django.core.validators.MaxValueValidator(65535)],
            verbose_name='internal ssh container port'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='status',
   field=models.CharField(choices=[('CREATING', 'В процессе создания'), ('READY', 'Готов к работе'),
           ('CREATING_FAILED', 'Не удалось создать'), ('BLOCK', 'Заблокирован'),
           ('REBUILD_CONNECTION', 'Соединение перестраивается')], default='CREATING',
          max_length=128, verbose_name='status'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='task_queue_name',
   field=models.CharField(max_length=120, unique=True, verbose_name='task queue name'),
  ),
  migrations.AlterField(
   model_name='chain',
   name='title',
   field=models.CharField(max_length=120, verbose_name='title'),
  ),
  migrations.AlterField(
   model_name='edge',
   name='chain',
   field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges',
         to='anon_app.chain', verbose_name='chain'),
  ),
  migrations.AlterField(
   model_name='edge',
   name='in_node',
   field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_node_set',
         to='anon_app.node', verbose_name='in_node'),
  ),
  migrations.AlterField(
   model_name='edge',
   name='out_node',
   field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_node_set',
         to='anon_app.node', verbose_name='out_node'),
  ),
  migrations.AlterField(
   model_name='edge',
   name='protocol',
   field=models.CharField(choices=[('SSH', 'ssh'), ('SSH_VIA_TOR', 'ssh via tor')], default='SSH',
          max_length=64, verbose_name='protocol'),
  ),
  migrations.AlterField(
   model_name='hosting',
   name='hosting_url',
   field=models.URLField(verbose_name='hosting url'),
  ),
  migrations.AlterField(
   model_name='hosting',
   name='name',
   field=models.CharField(max_length=128, verbose_name='name'),
  ),
  migrations.AlterField(
   model_name='hostingaccount',
   name='hosting',
   field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hosting_account',
           to='anon_app.hosting', verbose_name='hosting'),
  ),
  migrations.AlterField(
   model_name='hostingaccount',
   name='password',
   field=models.CharField(max_length=128, verbose_name='password'),
  ),
  migrations.AlterField(
   model_name='hostingaccount',
   name='username',
   field=models.CharField(max_length=32, verbose_name='username'),
  ),
  migrations.AlterField(
   model_name='node',
   name='geo',
   field=models.CharField(max_length=128, verbose_name='geo'),
  ),
  migrations.AlterField(
   model_name='node',
   name='id_rsa',
   field=models.FileField(null=True, upload_to='', verbose_name='ssh private key'),
  ),
  migrations.AlterField(
   model_name='node',
   name='id_rsa_pub',
   field=models.FileField(null=True, upload_to='', verbose_name='ssh public key'),
  ),
  migrations.AlterField(
   model_name='node',
   name='server',
   field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='anon_app.server',
           verbose_name='server'),
  ),
  migrations.AlterField(
   model_name='node',
   name='ssh_port',
   field=models.PositiveIntegerField(default=22, validators=[django.core.validators.MinValueValidator(1),
                  django.core.validators.MaxValueValidator(65535)],
            verbose_name='ssh port'),
  ),
  migrations.AlterField(
   model_name='node',
   name='ssh_proc_port',
   field=models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1024),
                  django.core.validators.MaxValueValidator(65535)],
            verbose_name='ssh proc port'),
  ),
  migrations.AlterField(
   model_name='proxy',
   name='ip',
   field=models.CharField(max_length=128, verbose_name='ip'),
  ),
  migrations.AlterField(
   model_name='proxy',
   name='location',
   field=models.CharField(max_length=128, verbose_name='location'),
  ),
  migrations.AlterField(
   model_name='proxy',
   name='password',
   field=models.CharField(blank=True, max_length=128, null=True, verbose_name='password'),
  ),
  migrations.AlterField(
   model_name='proxy',
   name='port',
   field=models.CharField(max_length=128, verbose_name='port'),
  ),
  migrations.AlterField(
   model_name='proxy',
   name='protocol',
   field=models.CharField(choices=[('FTP', 'ftp'), ('HTTP', 'http'), ('HTTPS', 'https'), ('Socks4', 'socks4'),
           ('Socks5', 'socks5'), ('SMTP', 'smtp'), ('POP3', 'pop3'), ('IMAP', 'imap')],
          max_length=128, verbose_name='protocol'),
  ),
  migrations.AlterField(
   model_name='proxy',
   name='username',
   field=models.CharField(blank=True, max_length=128, null=True, verbose_name='username'),
  ),
  migrations.AlterField(
   model_name='server',
   name='hosting',
   field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anon_app.hosting',
         verbose_name='hosting'),
  ),
  migrations.AlterField(
   model_name='server',
   name='ssh_ip',
   field=models.GenericIPAddressField(verbose_name='ip'),
  ),
  migrations.AlterField(
   model_name='server',
   name='ssh_port',
   field=models.PositiveIntegerField(default=22, validators=[django.core.validators.MinValueValidator(1),
                  django.core.validators.MaxValueValidator(65535)],
            verbose_name='ssh port'),
  ),
  migrations.AlterField(
   model_name='srvaccount',
   name='password',
   field=models.CharField(max_length=128, verbose_name='password'),
  ),
  migrations.AlterField(
   model_name='srvaccount',
   name='server',
   field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='server_account',
           to='anon_app.server', verbose_name='server'),
  ),
  migrations.AlterField(
   model_name='srvaccount',
   name='username',
   field=models.CharField(max_length=32, verbose_name='username'),
  ),
 ]